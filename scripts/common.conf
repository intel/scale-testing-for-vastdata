#!/bin/bash

# Intel Copyright © 2021, Intel Corporation.
# SPDX-License-Identifier: BSD-3-Clause

# Convenient variables for files that:
#  - need to know the folder structures
#  - however don't need to be client and VIP aware directly

# Harness folder structure
source="${BASH_SOURCE}"
SCRIPT_DIR="$(cd "$(dirname "$source")" || exit; pwd)"
TOP_DIR=${SCRIPT_DIR/%\/scripts/}
WORKLOAD_DIR="$TOP_DIR/workloads"
RESULTS_DIR="$TOP_DIR/results"

# vast-scale-testing will be created under $HOME/ to facilitate the installations and tests.
# For FIO non-Server/Client mode, per client result folders will also be created there.
VAST_SCALE_TESTING_PATH="$HOME/vast-scale-testing"

# Generated by run_test_no_runlog.sh to pass the running dir 
# to parent run_test.sh. Removed after the test.
RUN_DIR_TEMP_FILE="$VAST_SCALE_TESTING_PATH/run_dir.txt"

# Generated by run_test.sh to capture console output. 
# Moved to result folder after the test.
RUN_LOG_FILE="$VAST_SCALE_TESTING_PATH/run.log"

# Generated by rUn_test_no_runlog.sh to capture stderr with clush, 
# in order to exit the test harness properly on failure.
# Moved to result folder after the test.
RUN_ERROR_LOG_FILE="$VAST_SCALE_TESTING_PATH/run_error.log"

# Generated by nfs_mount.sh to capture stderr nfs_mount.sh, 
# in order to exit the test harness properly on failure.
# Moved to result folder after the test.
NFS_MOUNT_LOG_FILE="$VAST_SCALE_TESTING_PATH/nfs_mount.log"

# Mountpoint for results upload on head node
# The test harness automatically mount the sharepoint, upload the results to sharepoint, 
# and then umount the sharepoint before ending the test.
RESULTS_MNTPOINT="/mnt/vast-scale-testing-results"

